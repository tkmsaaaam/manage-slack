name: Reusing Build
on:
  workflow_call:
    inputs:
      FILE_NAME:
        type: string
        required: true
      DIR_NAME:
        type: string
        required: false
permissions:
  actions: write
env:
  FILE_NAME: ${{ inputs.FILE_NAME }}
  DIR_NAME: ${{ inputs.DIR_NAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Is Dir Name Null
        uses: actions/github-script@v6
        id: is_dir_name_null
        with:
          script: |
            const { FILE_NAME, DIR_NAME } = process.env
            return DIR_NAME == ''
      - name: Check Cache Hit
        id: cache-hit
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/${{ env.DIR_NAME }}${{ steps.is_dir_name_null.outputs.result == 'true' && '' ||  '/' }}${{ env.FILE_NAME }}
          key: ${{ runner.os }}-go-${{ env.DIR_NAME }}${{ steps.is_dir_name_null.outputs.result == 'true' && '' ||  '-' }}${{ env.FILE_NAME }}-${{ hashFiles('**/go.sum', format('{0}.go', env.FILE_NAME)) }}
      - name: Extension install
        if: steps.cache-hit.outputs.cache-hit != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh extension install actions/gh-actions-cache
      - name: Remove old cache
        if: steps.cache-hit.outputs.cache-hit != 'true'
        env:
          MAINCACHE: ${{ runner.os }}-go-${{ env.DIR_NAME }}${{ steps.is_dir_name_null.outputs.result == 'true' && '' ||  '-' }}${{ env.FILE_NAME }}-
        run: |
          gh actions-cache list -R $GITHUB_REPOSITORY \
          | xargs -I@ echo @ \
          | awk \
          -v maincache=$MAINCACHE \
          '{if(index($1,maincache) != 0){print $1}}' \
          | xargs -I% gh actions-cache delete % -R $GITHUB_REPOSITORY --confirm
      - name: Setup Go
        if: steps.cache-hit.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/${{ env.DIR_NAME }}${{ steps.is_dir_name_null.outputs.result == 'true' && '' ||  '/' }}go.mod
      - name: setup cache
        if: steps.cache-hit.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Build
        if: steps.cache-hit.outputs.cache-hit != 'true'
        run: GOFILE=${{ env.FILE_NAME }}.go && cd ${{ steps.is_dir_name_null.outputs.result == 'true' && '.' || env.DIR_NAME }} && pwd && go build $GOFILE
      - name: Add cache
        if: steps.cache-hit.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/${{ env.DIR_NAME }}/${{ env.FILE_NAME }}
          key: ${{ runner.os }}-go-${{ env.DIR_NAME }}${{ steps.is_dir_name_null.outputs.result == 'true' && '' ||  '-' }}${{ env.FILE_NAME }}-${{ hashFiles('**/go.sum', format('{0}.go', env.FILE_NAME)) }}
